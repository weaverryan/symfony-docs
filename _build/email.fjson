{
  "body": "<div class=\"section\" id=\"how-to-send-an-email\">\n<span id=\"index-0\"><\/span><h1>How to Send an Email<a class=\"headerlink\" href=\"#how-to-send-an-email\" title=\"Permalink to this headline\">\u00b6<\/a><\/h1>\n<p>Symfony provides a mailer feature based on the popular <a class=\"reference external\" href=\"http:\/\/swiftmailer.org\/\">Swift Mailer<\/a> library\nvia the <a class=\"reference external\" href=\"https:\/\/github.com\/symfony\/swiftmailer-bundle\">SwiftMailerBundle<\/a>. This mailer supports sending messages with your\nown mail servers as well as using popular email providers like <a class=\"reference external\" href=\"https:\/\/mandrill.com\/\">Mandrill<\/a>,\n<a class=\"reference external\" href=\"https:\/\/sendgrid.com\/\">SendGrid<\/a>, and <a class=\"reference external\" href=\"http:\/\/aws.amazon.com\/ses\/\">Amazon SES<\/a>.<\/p>\n<div class=\"section\" id=\"installation\">\n<h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<p>In applications using <a class=\"reference internal\" href=\"setup\/flex.html\"><em>Symfony Flex<\/em><\/a>, run this command to\ninstall the Swift Mailer based mailer before using it:<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-terminal\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"gp\">$<\/span> composer require symfony\/swiftmailer-bundle\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>If your application doesn't use Symfony Flex, follow the installation\ninstructions on <a class=\"reference external\" href=\"https:\/\/github.com\/symfony\/swiftmailer-bundle\">SwiftMailerBundle<\/a>.<\/p>\n<\/div>\n<div class=\"section\" id=\"configuration\">\n<span id=\"swift-mailer-configuration\"><\/span><h2>Configuration<a class=\"headerlink\" href=\"#configuration\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<p>The <code class=\"notranslate\">config\/packages\/swiftmailer.yaml<\/code> file that's created when installing the\nmailer provides all the initial config needed to send emails, except your mail\nserver connection details. Those parameters are defined in the <code class=\"notranslate\">MAILER_URL<\/code>\nenvironment variable in the <code class=\"notranslate\">.env<\/code> file:<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-bash\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3\n4\n5\n6\n7<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"c1\"># use this to disable email delivery<\/span>\n<span class=\"nv\">MAILER_URL<\/span><span class=\"o\">=<\/span>null:\/\/localhost\n\n<span class=\"c1\"># use this to configure a traditional SMTP server (make sure to URL-encode the<\/span>\n<span class=\"c1\"># values of the username and password if they contain non-alphanumeric characters<\/span>\n<span class=\"c1\"># such as &#39;+&#39;, &#39;@&#39;, &#39;:&#39; and &#39;*&#39;, which are reserved in URLs)<\/span>\n<span class=\"nv\">MAILER_URL<\/span><span class=\"o\">=<\/span>smtp:\/\/localhost:25?encryption<span class=\"o\">=<\/span>ssl<span class=\"p\">&amp;<\/span><span class=\"nv\">auth_mode<\/span><span class=\"o\">=<\/span>login<span class=\"p\">&amp;<\/span><span class=\"nv\">username<\/span><span class=\"o\">=<\/span><span class=\"p\">&amp;<\/span><span class=\"nv\">password<\/span><span class=\"o\">=<\/span>\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>Refer to the <a class=\"reference internal\" href=\"reference\/configuration\/swiftmailer.html\"><em>SwiftMailer configuration reference<\/em><\/a>\nfor the detailed explanation of all the available config options.<\/p>\n<\/div>\n<div class=\"section\" id=\"sending-emails\">\n<h2>Sending Emails<a class=\"headerlink\" href=\"#sending-emails\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<p>The Swift Mailer library works by creating, configuring and then sending\n<code class=\"notranslate\">Swift_Message<\/code> objects. The &quot;mailer&quot; is responsible for the actual delivery\nof the message and is accessible via the <code class=\"notranslate\">Swift_Mailer<\/code> service. Overall,\nsending an email is pretty straightforward:<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-php\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"k\">public<\/span> <span class=\"k\">function<\/span> <span class=\"nf\">index<\/span><span class=\"p\">(<\/span><span class=\"nv\">$name<\/span><span class=\"p\">,<\/span> <span class=\"nx\">\\Swift_Mailer<\/span> <span class=\"nv\">$mailer<\/span><span class=\"p\">)<\/span>\n<span class=\"p\">{<\/span>\n    <span class=\"nv\">$message<\/span> <span class=\"o\">=<\/span> <span class=\"p\">(<\/span><span class=\"k\">new<\/span> <span class=\"nx\">\\Swift_Message<\/span><span class=\"p\">(<\/span><span class=\"s1\">&#39;Hello Email&#39;<\/span><span class=\"p\">))<\/span>\n        <span class=\"o\">-&gt;<\/span><span class=\"na\">setFrom<\/span><span class=\"p\">(<\/span><span class=\"s1\">&#39;send@example.com&#39;<\/span><span class=\"p\">)<\/span>\n        <span class=\"o\">-&gt;<\/span><span class=\"na\">setTo<\/span><span class=\"p\">(<\/span><span class=\"s1\">&#39;recipient@example.com&#39;<\/span><span class=\"p\">)<\/span>\n        <span class=\"o\">-&gt;<\/span><span class=\"na\">setBody<\/span><span class=\"p\">(<\/span>\n            <span class=\"nv\">$this<\/span><span class=\"o\">-&gt;<\/span><span class=\"na\">renderView<\/span><span class=\"p\">(<\/span>\n                <span class=\"c1\">\/\/ templates\/emails\/registration.html.twig<\/span>\n                <span class=\"s1\">&#39;emails\/registration.html.twig&#39;<\/span><span class=\"p\">,<\/span>\n                <span class=\"k\">array<\/span><span class=\"p\">(<\/span><span class=\"s1\">&#39;name&#39;<\/span> <span class=\"o\">=&gt;<\/span> <span class=\"nv\">$name<\/span><span class=\"p\">)<\/span>\n            <span class=\"p\">),<\/span>\n            <span class=\"s1\">&#39;text\/html&#39;<\/span>\n        <span class=\"p\">)<\/span>\n        <span class=\"cm\">\/*<\/span>\n<span class=\"cm\">         * If you also want to include a plaintext version of the message<\/span>\n<span class=\"cm\">        -&gt;addPart(<\/span>\n<span class=\"cm\">            $this-&gt;renderView(<\/span>\n<span class=\"cm\">                &#39;emails\/registration.txt.twig&#39;,<\/span>\n<span class=\"cm\">                array(&#39;name&#39; =&gt; $name)<\/span>\n<span class=\"cm\">            ),<\/span>\n<span class=\"cm\">            &#39;text\/plain&#39;<\/span>\n<span class=\"cm\">        )<\/span>\n<span class=\"cm\">        *\/<\/span>\n    <span class=\"p\">;<\/span>\n\n    <span class=\"nv\">$mailer<\/span><span class=\"o\">-&gt;<\/span><span class=\"na\">send<\/span><span class=\"p\">(<\/span><span class=\"nv\">$message<\/span><span class=\"p\">);<\/span>\n\n    <span class=\"k\">return<\/span> <span class=\"nv\">$this<\/span><span class=\"o\">-&gt;<\/span><span class=\"na\">render<\/span><span class=\"p\">(<\/span><span class=\"o\">...<\/span><span class=\"p\">);<\/span>\n<span class=\"p\">}<\/span>\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>To keep things decoupled, the email body has been stored in a template and\nrendered with the <code class=\"notranslate\">renderView()<\/code> method. The <code class=\"notranslate\">registration.html.twig<\/code>\ntemplate might look something like this:<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-html+jinja\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"c\">{# templates\/emails\/registration.html.twig #}<\/span>\n<span class=\"p\">&lt;<\/span><span class=\"nt\">h3<\/span><span class=\"p\">&gt;<\/span>You did it! You registered!<span class=\"p\">&lt;\/<\/span><span class=\"nt\">h3<\/span><span class=\"p\">&gt;<\/span>\n\nHi <span class=\"cp\">{{<\/span> <span class=\"nv\">name<\/span> <span class=\"cp\">}}<\/span>! You&#39;re successfully registered.\n\n<span class=\"c\">{# example, assuming you have a route named &quot;login&quot; #}<\/span>\nTo login, go to: <span class=\"p\">&lt;<\/span><span class=\"nt\">a<\/span> <span class=\"na\">href<\/span><span class=\"o\">=<\/span><span class=\"s\">&quot;<\/span><span class=\"cp\">{{<\/span> <span class=\"nv\">url<\/span><span class=\"o\">(<\/span><span class=\"s1\">&#39;login&#39;<\/span><span class=\"o\">)<\/span> <span class=\"cp\">}}<\/span><span class=\"s\">&quot;<\/span><span class=\"p\">&gt;<\/span>...<span class=\"p\">&lt;\/<\/span><span class=\"nt\">a<\/span><span class=\"p\">&gt;<\/span>.\n\nThanks!\n\n<span class=\"c\">{# Makes an absolute URL to the \/images\/logo.png file #}<\/span>\n<span class=\"p\">&lt;<\/span><span class=\"nt\">img<\/span> <span class=\"na\">src<\/span><span class=\"o\">=<\/span><span class=\"s\">&quot;<\/span><span class=\"cp\">{{<\/span> <span class=\"nv\">absolute_url<\/span><span class=\"o\">(<\/span><span class=\"nv\">asset<\/span><span class=\"o\">(<\/span><span class=\"s1\">&#39;images\/logo.png&#39;<\/span><span class=\"o\">))<\/span> <span class=\"cp\">}}<\/span><span class=\"s\">&quot;<\/span><span class=\"p\">&gt;<\/span>\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>The <code class=\"notranslate\">$message<\/code> object supports many more options, such as including attachments,\nadding HTML content, and much more. Refer to the <a class=\"reference external\" href=\"https:\/\/swiftmailer.symfony.com\/docs\/messages.html\">Creating Messages<\/a> section\nof the Swift Mailer documentation for more details.<\/p>\n<\/div>\n<div class=\"section\" id=\"using-gmail-to-send-emails\">\n<span id=\"email-using-gmail\"><\/span><h2>Using Gmail to Send Emails<a class=\"headerlink\" href=\"#using-gmail-to-send-emails\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<p>During development, you might prefer to send emails using Gmail instead of\nsetting up a regular SMTP server. To do that, update the <code class=\"notranslate\">MAILER_URL<\/code> of your\n<code class=\"notranslate\">.env<\/code> file to this:<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-bash\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"c1\"># username is your full Gmail or Google Apps email address<\/span>\n<span class=\"nv\">MAILER_URL<\/span><span class=\"o\">=<\/span>gmail:\/\/username:password@localhost\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>The <code class=\"notranslate\">gmail<\/code> transport is simply a shortcut that uses the <code class=\"notranslate\">smtp<\/code> transport,\n<code class=\"notranslate\">ssl<\/code> encryption, <code class=\"notranslate\">login<\/code> auth mode and <code class=\"notranslate\">smtp.gmail.com<\/code> host. If your app\nuses other encryption or auth mode, you must override those values\n(<a class=\"reference internal\" href=\"reference\/configuration\/swiftmailer.html\"><em>see mailer config reference<\/em><\/a>):<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-bash\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"c1\"># username is your full Gmail or Google Apps email address<\/span>\n<span class=\"nv\">MAILER_URL<\/span><span class=\"o\">=<\/span>gmail:\/\/username:password@localhost?encryption<span class=\"o\">=<\/span>tls<span class=\"p\">&amp;<\/span><span class=\"nv\">auth_mode<\/span><span class=\"o\">=<\/span>oauth\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>If your Gmail account uses 2-Step-Verification, you must <a class=\"reference external\" href=\"https:\/\/support.google.com\/accounts\/answer\/185833\">generate an App password<\/a>\nand use it as the value of the mailer password. You must also ensure that you\n<a class=\"reference external\" href=\"https:\/\/support.google.com\/accounts\/answer\/6010255\">allow less secure apps to access your Gmail account<\/a>.<\/p>\n<\/div>\n<div class=\"section\" id=\"using-cloud-services-to-send-emails\">\n<h2>Using Cloud Services to Send Emails<a class=\"headerlink\" href=\"#using-cloud-services-to-send-emails\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<p>Cloud mailing services are a popular option for companies that don't want to set\nup and maintain their own reliable mail servers. In Symfony apps, using these\nservices is as simple as updating the value of <code class=\"notranslate\">MAILER_URL<\/code> in the <code class=\"notranslate\">.env<\/code>\nfile. For example, for <a class=\"reference external\" href=\"http:\/\/aws.amazon.com\/ses\/\">Amazon SES<\/a> (Simple Email Service):<\/p>\n<div class=\"literal-block notranslate\"><div class=\"highlight-bash\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3<\/pre><\/div><\/td><td class=\"code\"><div class=\"highlight\"><pre><span><\/span><span class=\"c1\"># The host will be different depending on your AWS zone<\/span>\n<span class=\"c1\"># The username\/password credentials are obtained from the Amazon SES console<\/span>\n<span class=\"nv\">MAILER_URL<\/span><span class=\"o\">=<\/span>smtp:\/\/email-smtp.us-east-1.amazonaws.com:587?encryption<span class=\"o\">=<\/span>tls<span class=\"p\">&amp;<\/span><span class=\"nv\">username<\/span><span class=\"o\">=<\/span>YOUR_SES_USERNAME<span class=\"p\">&amp;<\/span><span class=\"nv\">password<\/span><span class=\"o\">=<\/span>YOUR_SES_PASSWORD\n<\/pre><\/div>\n<\/td><\/tr><\/table><\/div><\/div>\n<p>Use the same technique for other mail services, as most of the time there is\nnothing more to it than configuring an SMTP endpoint.<\/p>\n<\/div>\n<div class=\"section\" id=\"learn-more\">\n<h2>Learn more<a class=\"headerlink\" href=\"#learn-more\" title=\"Permalink to this headline\">\u00b6<\/a><\/h2>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"email\/dev_environment.html\">How to Work with Emails during Development<\/a><\/li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"email\/spool.html\">How to Spool Emails<\/a><\/li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"email\/testing.html\">How to Test that an Email is Sent in a Functional Test<\/a><\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n",
  "alabaster_version": "0.7.10",
  "display_toc": true,
  "title": "How to Send an Email",
  "sourcename": "email.txt",
  "customsidebar": null,
  "current_page_name": "email",
  "next": {
    "link": "email\/dev_environment.html",
    "title": "How to Work with Emails during Development"
  },
  "rellinks": [
    [
      "genindex",
      "General Index",
      "I",
      "index"
    ],
    [
      "email\/dev_environment",
      "How to Work with Emails during Development",
      "N",
      "next"
    ],
    [
      "deployment\/proxies",
      "How to Configure Symfony to Work behind a Load Balancer or a Reverse Proxy",
      "P",
      "previous"
    ]
  ],
  "meta": {

  },
  "parents": [

  ],
  "sidebars": null,
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">How to Send an Email<\/a><ul>\n<li><a class=\"reference internal\" href=\"#installation\">Installation<\/a><\/li>\n<li><a class=\"reference internal\" href=\"#configuration\">Configuration<\/a><\/li>\n<li><a class=\"reference internal\" href=\"#sending-emails\">Sending Emails<\/a><\/li>\n<li><a class=\"reference internal\" href=\"#using-gmail-to-send-emails\">Using Gmail to Send Emails<\/a><\/li>\n<li><a class=\"reference internal\" href=\"#using-cloud-services-to-send-emails\">Using Cloud Services to Send Emails<\/a><\/li>\n<li><a class=\"reference internal\" href=\"#learn-more\">Learn more<\/a><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n",
  "prev": {
    "link": "deployment\/proxies.html",
    "title": "How to Configure Symfony to Work behind a Load Balancer or a Reverse Proxy"
  },
  "metatags": ""
}